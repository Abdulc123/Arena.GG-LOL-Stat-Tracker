{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdul\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python310\\\\CS_Tasks\\\\Projects\\\\League_project\\\\group08\\\\lol-tracker\\\\src\\\\components\\\\Backdrop.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../css/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Backdrop = ({\n  currentSummonerName,\n  version,\n  playerData\n}) => {\n  _s();\n  const [gameList, setGameList] = useState([]);\n  const [loading, setLoading] = useState(false); // Set initial loading state to false\n  const bannerVersion = \"1\";\n  const calculateMostRecentChampion = () => {\n    if (!Array.isArray(gameList) || gameList.length === 0) {\n      return \"Kayn\"; // Default champion if gameList is empty\n    }\n\n    // Sort the gameList based on game creation timestamp in descending order\n    const sortedGames = gameList.slice().sort((a, b) => b.info.gameCreation - a.info.gameCreation);\n    const mostRecentGameData = sortedGames.find(gameData => {\n      const searchedParticipant = gameData.info.participants.find(participant => participant.summonerName === currentSummonerName);\n      return searchedParticipant;\n    });\n\n    // Return the championName from the most recent game, or \"Kayn\" if no game is found\n    return mostRecentGameData ? mostRecentGameData.info.participants.find(participant => participant.summonerName === currentSummonerName).championName : \"Kayn\";\n  };\n  const mostRecentPlayedChamp = calculateMostRecentChampion();\n\n  // Check if playerData is available before fetching recent games\n  useEffect(() => {\n    if (playerData) {\n      setLoading(true); // Set loading to true when a new player search occurs\n\n      // Simulate an API call by setting the gameList after a short delay\n      setTimeout(() => {\n        // Assuming you have the gameList available in the props or state\n        const last20Games = gameList.slice(0, 20);\n        setGameList(last20Games);\n        setLoading(false); // Set loading to false when data is loaded\n      }, 1000); // Adjust the delay time as needed\n    }\n  }, [currentSummonerName, playerData, gameList]); // Include gameList in the dependencies\n\n  // Render the component based on loading state and playerData\n  if (playerData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), !loading && mostRecentPlayedChamp && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"champ-background-image\",\n        style: {\n          backgroundImage: `url('https://static.bigbrain.gg/assets/lol/riot_static/${version}/img/splash/${mostRecentPlayedChamp}_${bannerVersion}.jpg')`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n};\n_s(Backdrop, \"iEt+K6QeVHc7MiytE2n/6hC/IEI=\");\n_c = Backdrop;\nexport default Backdrop;\nvar _c;\n$RefreshReg$(_c, \"Backdrop\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Backdrop","currentSummonerName","version","playerData","_s","gameList","setGameList","loading","setLoading","bannerVersion","calculateMostRecentChampion","Array","isArray","length","sortedGames","slice","sort","a","b","info","gameCreation","mostRecentGameData","find","gameData","searchedParticipant","participants","participant","summonerName","championName","mostRecentPlayedChamp","setTimeout","last20Games","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundImage","_c","$RefreshReg$"],"sources":["C:/Users/abdul/AppData/Local/Programs/Python/Python310/CS_Tasks/Projects/League_project/group08/lol-tracker/src/components/Backdrop.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../css/App.css';\r\n\r\nconst Backdrop = ({currentSummonerName, version, playerData }) => {\r\n  const [gameList, setGameList] = useState([]);\r\n  const [loading, setLoading] = useState(false); // Set initial loading state to false\r\n  const bannerVersion = \"1\";\r\n\r\n  const calculateMostRecentChampion = () => {\r\n    if (!Array.isArray(gameList) || gameList.length === 0) {\r\n      return \"Kayn\"; // Default champion if gameList is empty\r\n    }\r\n\r\n    // Sort the gameList based on game creation timestamp in descending order\r\n    const sortedGames = gameList.slice().sort((a, b) => b.info.gameCreation - a.info.gameCreation);\r\n\r\n    const mostRecentGameData = sortedGames.find((gameData) => {\r\n      const searchedParticipant = gameData.info.participants.find(participant => participant.summonerName === currentSummonerName);\r\n      return searchedParticipant;\r\n    });\r\n\r\n    // Return the championName from the most recent game, or \"Kayn\" if no game is found\r\n    return mostRecentGameData ? mostRecentGameData.info.participants.find(participant => participant.summonerName === currentSummonerName).championName : \"Kayn\";\r\n  };\r\n\r\n  const mostRecentPlayedChamp = calculateMostRecentChampion();\r\n\r\n  // Check if playerData is available before fetching recent games\r\n  useEffect(() => {\r\n    if (playerData) {\r\n      setLoading(true); // Set loading to true when a new player search occurs\r\n\r\n      // Simulate an API call by setting the gameList after a short delay\r\n      setTimeout(() => {\r\n        // Assuming you have the gameList available in the props or state\r\n        const last20Games = gameList.slice(0, 20);\r\n        setGameList(last20Games);\r\n        setLoading(false); // Set loading to false when data is loaded\r\n      }, 1000); // Adjust the delay time as needed\r\n    }\r\n  }, [currentSummonerName, playerData, gameList]); // Include gameList in the dependencies\r\n\r\n  // Render the component based on loading state and playerData\r\n  if (playerData) {\r\n    return (\r\n      <div>\r\n        {loading && <div className=\"loading-circle\"></div>}\r\n        {!loading && mostRecentPlayedChamp && (\r\n          <div className=\"champ-background-image\"\r\n            style={{ backgroundImage: `url('https://static.bigbrain.gg/assets/lol/riot_static/${version}/img/splash/${mostRecentPlayedChamp}_${bannerVersion}.jpg')` }}\r\n          ></div>\r\n        )}\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default Backdrop;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}