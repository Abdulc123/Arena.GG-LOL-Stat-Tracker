{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdul\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python310\\\\CS_Tasks\\\\Projects\\\\League_project\\\\group08\\\\lol-tracker\\\\src\\\\components\\\\Backdrop.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../css/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Backdrop = ({\n  currentSummonerName,\n  version\n}) => {\n  _s();\n  const [gameList, setGameList] = useState([]);\n  const [loading, setLoading] = useState(true); // Loading state\n  const bannerVersion = \"1\";\n\n  // Function to calculate the most played champion\n  const calculateMostPlayedChampion = () => {\n    if (!Array.isArray(gameList) || gameList.length === 0) {\n      return \"Kayn\"; // Default champion if gameList is empty\n    }\n\n    const championCounts = {};\n    gameList.forEach(gameData => {\n      const searchedParticipant = gameData.info.participants.find(participant => participant.summonerName === currentSummonerName);\n      if (searchedParticipant) {\n        const championName = searchedParticipant.championName;\n        championCounts[championName] = (championCounts[championName] || 0) + 1;\n      }\n    });\n\n    // Find the champion with the highest count\n    let maxCount = 0;\n    let mostPlayedChampion = null;\n    for (const champion in championCounts) {\n      if (championCounts[champion] > maxCount) {\n        mostPlayedChampion = champion;\n        maxCount = championCounts[champion];\n      }\n    }\n    return mostPlayedChampion || \"Kayn\"; // Default champion if unable to determine\n  };\n\n  const mostPlayedChamp = calculateMostPlayedChampion();\n  useEffect(() => {\n    // Fetch recent games and limit to the last 20\n    setLoading(true); // Set loading to true before fetching\n    axios.get(\"http://localhost:4000/recentGames\", {\n      params: {\n        username: currentSummonerName\n      }\n    }).then(function (response) {\n      // Limit the gameList to the last 20 games\n      const last20Games = response.data.slice(0, 20);\n      setGameList(last20Games);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(() => {\n      setLoading(false); // Set loading to false when fetching is complete\n    });\n  }, [currentSummonerName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"champ-background-image\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-circle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) // Display loading circle\n    : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundImage: `url('https://static.bigbrain.gg/assets/lol/riot_static/${version}/img/splash/${mostPlayedChamp}_${bannerVersion}.jpg')`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Backdrop, \"GR6JJajiusZaE5d4lnazIb5K1B0=\");\n_c = Backdrop;\nexport default Backdrop;\nvar _c;\n$RefreshReg$(_c, \"Backdrop\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Backdrop","currentSummonerName","version","_s","gameList","setGameList","loading","setLoading","bannerVersion","calculateMostPlayedChampion","Array","isArray","length","championCounts","forEach","gameData","searchedParticipant","info","participants","find","participant","summonerName","championName","maxCount","mostPlayedChampion","champion","mostPlayedChamp","get","params","username","then","response","last20Games","data","slice","catch","error","console","log","finally","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundImage","_c","$RefreshReg$"],"sources":["C:/Users/abdul/AppData/Local/Programs/Python/Python310/CS_Tasks/Projects/League_project/group08/lol-tracker/src/components/Backdrop.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../css/App.css';\r\n\r\nconst Backdrop = ({ currentSummonerName, version }) => {\r\n  const [gameList, setGameList] = useState([]);\r\n  const [loading, setLoading] = useState(true); // Loading state\r\n  const bannerVersion = \"1\";\r\n\r\n  // Function to calculate the most played champion\r\n  const calculateMostPlayedChampion = () => {\r\n    if (!Array.isArray(gameList) || gameList.length === 0) {\r\n      return \"Kayn\"; // Default champion if gameList is empty\r\n    }\r\n\r\n    const championCounts = {};\r\n    \r\n    gameList.forEach((gameData) => {\r\n      const searchedParticipant = gameData.info.participants.find(participant => participant.summonerName === currentSummonerName);\r\n\r\n      if (searchedParticipant) {\r\n        const championName = searchedParticipant.championName;\r\n        championCounts[championName] = (championCounts[championName] || 0) + 1;\r\n      }\r\n    });\r\n\r\n    // Find the champion with the highest count\r\n    let maxCount = 0;\r\n    let mostPlayedChampion = null;\r\n\r\n    for (const champion in championCounts) {\r\n      if (championCounts[champion] > maxCount) {\r\n        mostPlayedChampion = champion;\r\n        maxCount = championCounts[champion];\r\n      }\r\n    }\r\n\r\n    return mostPlayedChampion || \"Kayn\"; // Default champion if unable to determine\r\n  };\r\n\r\n  const mostPlayedChamp = calculateMostPlayedChampion();\r\n\r\n  useEffect(() => {\r\n    // Fetch recent games and limit to the last 20\r\n    setLoading(true); // Set loading to true before fetching\r\n    axios.get(\"http://localhost:4000/recentGames\", { params: { username: currentSummonerName } })\r\n      .then(function (response) {\r\n        // Limit the gameList to the last 20 games\r\n        const last20Games = response.data.slice(0, 20);\r\n        setGameList(last20Games);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false); // Set loading to false when fetching is complete\r\n      });\r\n  }, [currentSummonerName]);\r\n\r\n  return (\r\n    <div className=\"champ-background-image\" >\r\n      {loading ? (\r\n        <div className=\"loading-circle\"></div> // Display loading circle\r\n      ) : (\r\n        <div\r\n          style={{ backgroundImage: `url('https://static.bigbrain.gg/assets/lol/riot_static/${version}/img/splash/${mostPlayedChamp}_${bannerVersion}.jpg')` }}\r\n        ></div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}